{"version":3,"sources":["resources/pattern_background.png","components/Header.js","components/RepList.js","components/Weight_entry.js","Home.js","About.js","NoMatch.js","components/Layout.js","components/Jumbotron.js","components/BottomJumbo.js","App.js","serviceWorker.js","index.js","resources/Deadlift_pic.jpg"],"names":["module","exports","Styles","styled","div","NavBar","Fragment","Navbar","expand","NavbarBrand","href","className","Toggle","aria-controls","Collapse","id","Nav","Item","Link","to","React","Component","RepList","week","this","props","list","Array","display","parseInt","NameForm","state","valuesEntered","dead","ohp","squat","bench","weekNum","percentage1","cycle","showModal","handleInputChange","bind","handleSubmit","changeWeek","editValues","handleToggleModal","handleModalProgress","handleModalRepeat","resetWeekNum","event","flipped","setState","console","log","changeCycle","target","value","name","alert","preventDefault","newCycle","newDead","newOHP","newSquat","newBench","Dead","OHP","Squat","Bench","Container","fluid","Modal","show","onHide","animation","backdrop","Header","closeButton","Title","Body","Footer","Button","variant","onClick","Row","Col","toFixed","class","onSubmit","type","onChange","Home","About","NoMatch","Layout","children","deadlift","Jumbotron","BotJumbo","App","style","paddingLeft","paddingRight","paddingBottom","paddingTop","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb903834.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pattern_background.c12076b2.png\";","import React from \"react\";\nimport { Nav, Navbar, NavbarBrand} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"../App.css\";\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #752;\n  }\n  a,\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: #bbb;\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nexport default class NavBar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Styles>\n          <Navbar expand=\"lg\">\n            <NavbarBrand href=\"/\">\n              <h2 className=\"h2-coloured\">5/3/1 Workout Planner</h2>\n            </NavbarBrand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"ml-auto\">\n                <Nav.Item>\n                  <Nav.Link>\n                    <Link to=\"/\">Home</Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link>\n                    <Link to=\"/About\">About</Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </Styles>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class RepList extends React.Component {\n  render() {\n    const week = this.props.week;\n    var list = new Array();\n    list[1] = \"set of 5, set of 5, set of 5+\";\n    list[2] = \"set of 3, set of 3, set of 3+\";\n    list[3] = \"set of 5, set of 3, set of 1+\";\n    list[4] = \"set of 5, set of 5, set of 5\";\n\n    const display = list[parseInt(week)];\n\n    return <h4>{display}</h4>;\n  }\n}\n","import React from \"react\";\nimport RepList from \"./RepList\";\nimport Header from \"./Header\";\n\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .weightEntry {\n    z-index: 20;\n  }\n`;\n\nexport default class NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valuesEntered: false,\n      dead: \"\",\n      ohp: \"\",\n      squat: \"\",\n      bench: \"\",\n      weekNum: 1,\n      percentage1: 0.65,\n      cycle: 0,\n      showModal: false\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.changeWeek = this.changeWeek.bind(this);\n    this.editValues = this.editValues.bind(this);\n    this.handleToggleModal = this.handleToggleModal.bind(this);\n    this.handleModalProgress = this.handleModalProgress.bind(this);\n    this.handleModalRepeat = this.handleModalRepeat.bind(this);\n    this.resetWeekNum = this.resetWeekNum.bind(this);\n  }\n\n  handleToggleModal(event) {\n    const flipped = !this.state.showModal;\n    this.setState({ showModal: flipped });\n  }\n\n  resetWeekNum(event) {\n    this.setState({ weekNum: 0 });\n  }\n\n  async handleModalProgress(event) {\n    //set week to 0 to start new cycle - increase weights\n    this.resetWeekNum();\n    console.log(this.state);\n    this.changeCycle();\n    this.changeWeek();\n    this.handleToggleModal();\n  }\n\n  handleModalRepeat(event) {\n    //set week to 0 and dont change the weights\n    this.resetWeekNum();\n    this.changeWeek();\n    this.handleToggleModal();\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(event) {\n    if (\n      this.state.dead === \"\" ||\n      this.state.ohp === \"\" ||\n      this.state.squat === \"\" ||\n      this.state.bench === \"\"\n    ) {\n      alert(\"Fill in all boxes please\");\n      event.preventDefault();\n    } else {\n      this.setState({ valuesEntered: true });\n      event.preventDefault();\n    }\n  }\n\n  changeWeek(event) {\n    var week = parseInt(this.state.weekNum) + 1;\n    if (week === 5) {\n      //control so weeks only go from 1 - 4\n      this.changeCycle();\n      week = 1;\n      //modal will either set week to 0 (makes it 1) or set to 4 again\n    } else\n      switch (week) {\n        case 1:\n          this.setState({ percentage1: 0.65 });\n          break;\n        case 2:\n          this.setState({ percentage1: 0.7 });\n          break;\n        case 3:\n          this.setState({ percentage1: 0.75 });\n          break;\n        case 4:\n          this.setState({ percentage1: 0.4 });\n          break;\n        default:\n          this.setState({ percentage1: 0.65 });\n      }\n\n    this.setState({ weekNum: week });\n  }\n\n  editValues(event) {\n    this.setState({ valuesEntered: false });\n  }\n\n  changeCycle(event) {\n    const newCycle = this.state.cycle + 1;\n    const newDead = parseInt(this.state.dead) + 10;\n    const newOHP = parseInt(this.state.ohp) + 5;\n    const newSquat = parseInt(this.state.squat) + 10;\n    const newBench = parseInt(this.state.bench) + 5;\n\n    this.setState({\n      dead: newDead,\n      ohp: newOHP,\n      squat: newSquat,\n      bench: newBench,\n      cycle: newCycle\n    });\n  }\n\n  render() {\n    if (!this.state.valuesEntered) {\n      return (\n        <Container fluid={true} className=\"weightEntry\">\n          <Row>\n            <div class=\"col-md-5\">\n              <h4>Enter 1-Rep Maxes:</h4>\n            </div>\n          </Row>\n          <form onSubmit={this.handleSubmit}>\n            <Row>\n              <div class=\"col-md-2\">\n                <label>Deadlift: </label>\n              </div>\n              <div class=\"col-md-10\">\n                <input\n                  name=\"dead\"\n                  type=\"number\"\n                  value={this.state.dead}\n                  onChange={this.handleInputChange}\n                />\n              </div>\n            </Row>\n            <Row>\n              <div class=\"col-md-2\">\n                <label>Overhead Press:</label>\n              </div>\n              <div class=\"col-md-10\">\n                <input\n                  name=\"ohp\"\n                  type=\"number\"\n                  value={this.state.ohp}\n                  onChange={this.handleInputChange}\n                />\n              </div>\n            </Row>\n            <Row>\n              <div class=\"col-md-2\">\n                <label>Squat:</label>\n              </div>\n              <div class=\"col-md-10\">\n                <input\n                  name=\"squat\"\n                  type=\"number\"\n                  value={this.state.squat}\n                  onChange={this.handleInputChange}\n                />\n              </div>\n            </Row>\n            <Row>\n              <div class=\"col-md-2\">\n                <label>Bench Press:</label>\n              </div>\n              <div class=\"col-md-10\">\n                <input\n                  name=\"bench\"\n                  type=\"number\"\n                  value={this.state.bench}\n                  onChange={this.handleInputChange}\n                />\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-5\">\n                <input type=\"submit\" value=\"Submit\" />\n              </div>\n            </Row>\n          </form>\n          {/* <h1> _</h1> */}\n        </Container>\n      );\n    } else {\n      var Dead = parseInt(this.state.dead);\n      var OHP = parseInt(this.state.ohp);\n      var Squat = parseInt(this.state.squat);\n      var Bench = parseInt(this.state.bench);\n\n      return (\n        <Container fluid={true}>\n          <Modal\n            show={this.state.showModal}\n            onHide={this.handleToggleModal}\n            animation={false}\n            backdrop=\"static\"\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Advance Cycle</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              Congrats on finishing a cycle. Select to increase weight if all\n              reps were preformed succesfully - otherwise repeat the same\n              weights\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleModalProgress}>\n                Repeat cycle\n              </Button>\n              <Button variant=\"primary\" onClick={this.handleModalRepeat}>\n                Advance to next Cycle\n              </Button>\n            </Modal.Footer>\n          </Modal>\n          <h1></h1>\n          <h4>Weights for week {this.state.weekNum}:</h4>{\" \"}\n          <RepList week={this.state.weekNum} />\n          <Container fluid={true}>\n            <Row>\n              <Col>Deadlift</Col>\n              <Col>Overhead Press</Col>\n              <Col>Squat</Col>\n              <Col>Bench Press</Col>\n            </Row>\n            <Row>\n              <Col>{(Dead * this.state.percentage1).toFixed(0)}</Col>\n              <Col>{(OHP * this.state.percentage1).toFixed(0)}</Col>\n              <Col>{(Squat * this.state.percentage1).toFixed(0)}</Col>\n              <Col>{(Bench * this.state.percentage1).toFixed(0)}</Col>\n            </Row>\n            <Row>\n              <Col>{(Dead * (this.state.percentage1 + 0.1)).toFixed(0)}</Col>\n              <Col>{(OHP * (this.state.percentage1 + 0.1)).toFixed(0)}</Col>\n              <Col>{(Squat * (this.state.percentage1 + 0.1)).toFixed(0)}</Col>\n              <Col>{(Bench * (this.state.percentage1 + 0.1)).toFixed(0)}</Col>\n            </Row>\n            <Row>\n              <Col>{(Dead * (this.state.percentage1 + 0.2)).toFixed(0)}</Col>\n              <Col>{(OHP * (this.state.percentage1 + 0.2)).toFixed(0)}</Col>\n              <Col>{(Squat * (this.state.percentage1 + 0.2)).toFixed(0)}</Col>\n              <Col>{(Bench * (this.state.percentage1 + 0.2)).toFixed(0)}</Col>\n            </Row>\n            <Col>\n              <Button variant=\"primary\" onClick={this.changeWeek}>\n                Next Week\n              </Button>\n              <Button variant=\"secondary\" onClick={this.editValues}>\n                Edit 1 Rep Maxes\n              </Button>\n            </Col>\n          </Container>\n          <h1> </h1>\n          <h1> </h1>\n          <h1> </h1>\n        </Container>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport NameForm from \"./components/Weight_entry\";\nimport \"./App.css\";\nimport { Container } from \"react-bootstrap\";\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <Container fluid={true}>\n        <NameForm />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport default class About extends React.Component {\n  render() {\n    return (\n      <Container fluid={true}>\n        <h4>About</h4>\n        <p>\n          This is a simple calculator app meant for use in the 5/3/1 progressive\n          overload weightlifting schema developed by body-builder Jim Wendler.\n          After inputting your 1 rep maxes, it will tell you what weights to use\n          for each week as well as how to structure your sets. To learn more\n          about this program visit{\" \"}\n          <a href=\"https://jimwendler.com/blogs/jimwendler-com/101065094-5-3-1-for-a-beginner\">\n            <i>Jim Wendler's blog</i>.\n          </a>\n          <p>\n            This site is an open source project created by Github User{\" \"}\n            <a href=\"https://github.com/jmcdona1d\">\n              <i>jmcdona1d</i>\n            </a>\n            . The project source code can be found{\" \"}\n            <a href=\"https://github.com/jmcdona1d/workout_helper\">\n              <i>here</i>\n            </a>{\" \"}\n            Feel free to raise suggestions/improvements in an issue or tackle\n            them yourself and submit a pull request.\n          </p>\n          <p>\n            Some features that are currently in development are:{\" \"}\n            <ul>\n              <li>\n                Option to repaeat cycles weights or increase them after 4 weeks\n              </li>\n              <li>\n                A login system that can persist your weights when you leave\n              </li>\n              <li>Automatic week switching</li>\n              <li>Weight plate calculator</li>\n            </ul>\n          </p>\n        </p>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class NoMatch extends React.Component {\n  render() {\n    return <h1>Invalid url</h1>;\n  }\n}\n","import React from \"react\";\n\nexport default class Layout extends React.Component {\n  render() {\n    return <React.Fragment>{this.props.children}</React.Fragment>;\n  }\n}\n","import React from \"react\";\nimport { Jumbotron as Jumbo, Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport deadlift from \"../resources/Deadlift_pic.jpg\";\nimport \"../App.css\";\n\nconst Styles = styled.div`\n  .jumbotron {\n    background: url(${deadlift}) no-repeat fixed bottom;\n    background-size: cover;\n    color: #ccc;\n    height: 260px;\n    position: relative;\n    z-index: 1;\n  }\n\n  .overlay {\n    background-color: #000;\n    opacity: 0.2;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 2;\n  }\n`;\n\nexport default class Jumbotron extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Styles>\n          <Jumbo fluid className=\"jumbo\">\n            <div className=\"overlay\" />\n            <Container className=\"Jumbotron-title\">\n              <h3>Welcome to the workout planner</h3>\n              <p>Brace yourself for max gainz</p>\n            </Container>\n          </Jumbo>\n        </Styles>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport deadlift from \"../resources/Deadlift_pic.jpg\";\nimport \"../App.css\";\nimport { Navbar } from \"react-bootstrap\";\n\nconst Styles = styled.div`\n  .BotJumbo {\n    background-color: #752;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    left: 0;\n  }\n  a,\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: #bbb;\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nexport default class BotJumbo extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Styles>\n          <Navbar fluid className=\"BotJumbo\">\n            <Container className=\"BotJumbo-title\">\n              <h8 className=\"h5-coloured\">\n                <i>\n                  \"The Simplest and Most Effective Training System to Build Raw\n                  Strength\"\n                </i>{\" \"}\n                - Jim Wendler\n              </h8>\n            </Container>\n          </Navbar>\n        </Styles>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport NavBar from \"./components/Header\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport NoMatch from \"./NoMatch\";\nimport Layout from \"./components/Layout\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Background from \"./resources/pattern_background.png\";\n//<a href=\"https://www.freepik.com/free-photos-vectors/background\">Background vector created by starline - www.freepik.com</a>\nimport styled from \"styled-components\";\nimport BotJumbo from \"./components/BottomJumbo\";\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  return (\n    <Container\n      fluid={true}\n      style={{\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingTop: 0\n      }}\n    >\n      <div className=\"globalMain\" />\n      <div>\n        <Layout>\n          <Router>\n            <NavBar />\n            <Jumbotron />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/About\" component={About} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Router>\n          <BotJumbo />\n        </Layout>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Deadlift_pic.26293212.jpg\";"],"sourceRoot":""}